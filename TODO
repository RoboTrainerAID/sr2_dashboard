1)Add ability to start cob_bringup (robot.launch) from inside the control view of the SR2 dashboard
2)Add cob_global_navigation (or something like that) eband.launch (control view again)
3)Add init button (control view) for base_controller/init, recover and shutdown (add 'rosservice CALL' support to the SR2 dashboard but only for Trigger-type messages)
4)Add status widget (indicators for battery, emergency stop and state of the system (diagnostics, aggregator blah blah))
5)Visual feedback for (init/shutdown) and (recover) buttons -> warning: status of init (successful or not) has to be checked -> disable button until init OK




LAYOUT -- Currently unable to find a way to setup layout from code inside the dashboard. Manual alignment by dragging the dockable widgets is of course provided by the Rqt plugin infrastructure
left: put 4)
top: open/close views, statusbar
right+center: views (1),2),3))

6)Add log output widget (see cob_dashboard and pr2_dashboard)
7)View for dynamic_reconfigure (convert the YAML config file to ROS-compatible configuration file that can be embedded in the dynamic_reconfigure infrastructure)
8)Add robot_monitor widget as view
9)Add rqt_graph launcher
10)Add perspective
11)Add pose view as view --> Add createView that takes a widget as argument and creates a SR2View only with that widget
12)Add TF tree launcher


------------------------
TIPS:
1) Change icon of service call entity into sand clock during waiting
2) Add support of complex services however the arguments of a service will be editable only inside the configuration file
3) Detect presence of roscore
